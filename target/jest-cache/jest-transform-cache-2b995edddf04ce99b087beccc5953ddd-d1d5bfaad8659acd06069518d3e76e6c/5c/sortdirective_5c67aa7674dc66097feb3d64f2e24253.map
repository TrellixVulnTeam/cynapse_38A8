{"version":3,"sources":["/home/karthik/cynapseTech/src/main/webapp/app/shared/sort/sort.directive.ts"],"names":[],"mappingsyBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;AAKA,IAAa,aAAa,GAA1B,MAAa,aAAb,CAA0B;AAA1B,EAAA,WAAA,GAAA;AAAA;AAAA;AAAA;AAqBY,SAAA,eAAA,GAAkB,IAAI,MAAA,CAAA,YAAJ,EAAlB;;AArBZ;AAAA;AAsBY,SAAA,eAAA,GAAkB,IAAI,MAAA,CAAA,YAAJ,EAAlB;AAcX;;AAlCC,MAAI,SAAJ,GAAa;AAAA;AAAA;AAAA;AACX,WAAO,KAAK,UAAZ;AACD;;AACD,MAAI,SAAJ,CAAc,SAAd,EAAsC;AAAA;AAAA;AAAA;AACpC,SAAK,UAAL,GAAkB,SAAlB;;AADoC;AAAA;AAEpC,SAAK,eAAL,CAAqB,IAArB,CAA0B,SAA1B;AACD;;AAGD,MAAI,SAAJ,GAAa;AAAA;AAAA;AAAA;AACX,WAAO,KAAK,UAAZ;AACD;;AACD,MAAI,SAAJ,CAAc,SAAd,EAA4C;AAAA;AAAA;AAAA;AAC1C,SAAK,UAAL,GAAkB,SAAlB;;AAD0C;AAAA;AAE1C,SAAK,eAAL,CAAqB,IAArB,CAA0B,SAA1B;AACD;;AAUD,EAAA,IAAI,CAAC,KAAD,EAAU;AAAA;AAAA;;;;AAAA;AAAA;;AACZ,QAAI,MAAM,CAAC,KAAK,SAAN,CAAN,KAA2B,QAA/B,EAAyC;AAAA;AAAA;AAAA;AACvC,WAAK,SAAL,GAAiB,KAAK,KAAK,KAAK,SAAf;AAAA;AAAA,kCAA2B,IAA3B;AAAA;AAAA,kCAAkC,CAAC,KAAK,SAAxC,CAAjB;;AADuC;AAAA;AAEvC,WAAK,SAAL,GAAiB,KAAjB;;AAFuC;AAAA;AAGvC,WAAK,eAAL,CAAqB,IAArB,CAA0B,KAA1B;;AAHuC;AAAA;AAIvC,WAAK,eAAL,CAAqB,IAArB,CAA0B,KAAK,SAA/B;;AAJuC;AAAA;;AAKvC;AAAA,mCAAA,EAAA,GAAA,KAAK,QAAL,MAAa,IAAb;AAAA;AAAA,kCAAa,EAAA,KAAA,KAAA,CAAb;AAAA;AAAA,kCAAa,KAAA,CAAb;AAAA;AAAA,kCAAa,EAAA,CAAA,IAAA,CAAb,IAAa,CAAb;AACD,KAND;AAAA;AAAA;AAAA;AAAA;AAOD;;AAnCuB,CAA1B;;;;;AAEE,OAAA,CAAA,UAAA,CAAA,CADC,MAAA,CAAA,KAAA,EACD,E,yCAAA,E,iDAAA,CAAA,E,uBAAA,E,WAAA,EAEC,IAFD;;;;;AASA,OAAA,CAAA,UAAA,CAAA,CADC,MAAA,CAAA,KAAA,EACD,E,yCAAA,E,iDAAA,CAAA,E,uBAAA,E,WAAA,EAEC,IAFD;;;;;AAQS,OAAA,CAAA,UAAA,CAAA,CAAR,MAAA,CAAA,KAAA,EAAQ,E,2CAAA,CAAA,E,uBAAA,E,UAAA,E,KAAsB,CAAtB;;;;;AAEC,OAAA,CAAA,UAAA,CAAA,CAAT,MAAA,CAAA,MAAA,EAAS,E,yCAAA,CAAA,E,uBAAA,E,iBAAA,E,KAAwC,CAAxC;;;;;AACA,OAAA,CAAA,UAAA,CAAA,CAAT,MAAA,CAAA,MAAA,EAAS,E,yCAAA,CAAA,E,uBAAA,E,iBAAA,E,KAA8C,CAA9C;;;;AAtBC,aAAa,GAAA,OAAA,CAAA,UAAA,CAAA,CAHzB,MAAA,CAAA,SAAA,CAAU;AACT,EAAA,QAAQ,EAAE;AADD,CAAV,CAGyB,CAAA,EAAb,aAAa,CAAb;;;;AAAA,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[jhiSort]',\n})\nexport class SortDirective<T> {\n  @Input()\n  get predicate(): T | undefined {\n    return this._predicate;\n  }\n  set predicate(predicate: T | undefined) {\n    this._predicate = predicate;\n    this.predicateChange.emit(predicate);\n  }\n\n  @Input()\n  get ascending(): boolean | undefined {\n    return this._ascending;\n  }\n  set ascending(ascending: boolean | undefined) {\n    this._ascending = ascending;\n    this.ascendingChange.emit(ascending);\n  }\n\n  @Input() callback?: () => void;\n\n  @Output() predicateChange = new EventEmitter<T>();\n  @Output() ascendingChange = new EventEmitter<boolean>();\n\n  private _predicate?: T;\n  private _ascending?: boolean;\n\n  sort(field?: T): void {\n    if (String(this.predicate) !== '_score') {\n      this.ascending = field !== this.predicate ? true : !this.ascending;\n      this.predicate = field;\n      this.predicateChange.emit(field);\n      this.ascendingChange.emit(this.ascending);\n      this.callback?.();\n    }\n  }\n}\n"]}