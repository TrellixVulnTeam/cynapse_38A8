5a0dbb8c58082568af7c886fa70cf956
"use strict";

/* istanbul ignore next */
function cov_23tcl1peoo() {
  var path = "/home/karthik/cynapseTech/src/main/webapp/app/account/activate/activate.component.ts";
  var hash = "72575a47e4600406d6825a1370040302d9237e54";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/karthik/cynapseTech/src/main/webapp/app/account/activate/activate.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "6": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 8,
          column: 56
        }
      },
      "7": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 47
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "12": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 172
        }
      },
      "13": {
        start: {
          line: 17,
          column: 67
        },
        end: {
          line: 17,
          column: 103
        }
      },
      "14": {
        start: {
          line: 17,
          column: 123
        },
        end: {
          line: 17,
          column: 142
        }
      },
      "15": {
        start: {
          line: 17,
          column: 152
        },
        end: {
          line: 17,
          column: 169
        }
      },
      "16": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 26,
          column: 22
        }
      },
      "17": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 57
          },
          end: {
            line: 17,
            column: 58
          }
        },
        loc: {
          start: {
            line: 17,
            column: 67
          },
          end: {
            line: 17,
            column: 103
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 116
          },
          end: {
            line: 17,
            column: 117
          }
        },
        loc: {
          start: {
            line: 17,
            column: 123
          },
          end: {
            line: 17,
            column: 142
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 17,
            column: 145
          },
          end: {
            line: 17,
            column: 146
          }
        },
        loc: {
          start: {
            line: 17,
            column: 152
          },
          end: {
            line: 17,
            column: 169
          }
        },
        line: 17
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/karthik/cynapseTech/src/main/webapp/app/account/activate/activate.component.ts",
      mappings: ";;;;AAAA,wCAAkD;AAClD,4CAAiD;AACjD,8CAA0C;AAE1C,yDAAqD;AAMrD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAI5B,YAAoB,eAAgC,EAAU,KAAqB;QAA/D,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAHnF,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;IAEsE,CAAC;IAEvF,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAC7F,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAC3B,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAC1B,CAAC;IACJ,CAAC;CACF,CAAA;AAZY,iBAAiB;IAJ7B,gBAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kBAAa,2BAA2B,CAAA;KACzC,CAAC;6CAKqC,kCAAe,EAAiB,uBAAc;GAJxE,iBAAiB,CAY7B;AAZY,8CAAiB",
      names: [],
      sources: ["/home/karthik/cynapseTech/src/main/webapp/app/account/activate/activate.component.ts"],
      sourcesContent: ["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { ActivateService } from './activate.service';\n\n@Component({\n  selector: 'jhi-activate',\n  templateUrl: './activate.component.html',\n})\nexport class ActivateComponent implements OnInit {\n  error = false;\n  success = false;\n\n  constructor(private activateService: ActivateService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.pipe(mergeMap(params => this.activateService.get(params.key))).subscribe(\n      () => (this.success = true),\n      () => (this.error = true)\n    );\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "72575a47e4600406d6825a1370040302d9237e54"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23tcl1peoo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_23tcl1peoo();
cov_23tcl1peoo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_23tcl1peoo().s[1]++;
exports.ActivateComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_23tcl1peoo().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_23tcl1peoo().s[3]++, require("@angular/core"));
const router_1 =
/* istanbul ignore next */
(cov_23tcl1peoo().s[4]++, require("@angular/router"));
const operators_1 =
/* istanbul ignore next */
(cov_23tcl1peoo().s[5]++, require("rxjs/operators"));
const activate_service_1 =
/* istanbul ignore next */
(cov_23tcl1peoo().s[6]++, require("./activate.service"));

/* istanbul ignore next */
cov_23tcl1peoo().s[7]++;
let ActivateComponent = class ActivateComponent {
  constructor(activateService, route) {
    /* istanbul ignore next */
    cov_23tcl1peoo().f[0]++;
    cov_23tcl1peoo().s[8]++;
    this.activateService = activateService;

    /* istanbul ignore next */
    cov_23tcl1peoo().s[9]++;
    this.route = route;

    /* istanbul ignore next */
    cov_23tcl1peoo().s[10]++;
    this.error = false;

    /* istanbul ignore next */
    cov_23tcl1peoo().s[11]++;
    this.success = false;
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_23tcl1peoo().f[1]++;
    cov_23tcl1peoo().s[12]++;
    this.route.queryParams.pipe(operators_1.mergeMap(params => {
      /* istanbul ignore next */
      cov_23tcl1peoo().f[2]++;
      cov_23tcl1peoo().s[13]++;
      return this.activateService.get(params.key);
    })).subscribe(() => {
      /* istanbul ignore next */
      cov_23tcl1peoo().f[3]++;
      cov_23tcl1peoo().s[14]++;
      return this.success = true;
    }, () => {
      /* istanbul ignore next */
      cov_23tcl1peoo().f[4]++;
      cov_23tcl1peoo().s[15]++;
      return this.error = true;
    });
  }

};

/* istanbul ignore next */
cov_23tcl1peoo().s[16]++;
ActivateComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-activate',
  template: require('./activate.component.html')
}), tslib_1.__metadata("design:paramtypes", [activate_service_1.ActivateService, router_1.ActivatedRoute])], ActivateComponent);

/* istanbul ignore next */
cov_23tcl1peoo().s[17]++;
exports.ActivateComponent = ActivateComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2thcnRoaWsvY3luYXBzZVRlY2gvc3JjL21haW4vd2ViYXBwL2FwcC9hY2NvdW50L2FjdGl2YXRlL2FjdGl2YXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFoQlYsTUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLFFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxpQkFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLFdBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxnQkFBQSxDQUFBLENBQUE7QUFFQSxNQUFBLGtCQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBOzs7O0FBTUEsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBYixDQUE4QjtBQUk1QixFQUFBLFdBQUEsQ0FBb0IsZUFBcEIsRUFBOEQsS0FBOUQsRUFBbUY7QUFBQTtBQUFBO0FBQUE7QUFBL0QsU0FBQSxlQUFBLEdBQUEsZUFBQTs7QUFBK0Q7QUFBQTtBQUFyQixTQUFBLEtBQUEsR0FBQSxLQUFBOztBQUFxQjtBQUFBO0FBSG5GLFNBQUEsS0FBQSxHQUFRLEtBQVI7O0FBR21GO0FBQUE7QUFGbkYsU0FBQSxPQUFBLEdBQVUsS0FBVjtBQUV1Rjs7QUFFdkYsRUFBQSxRQUFRLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTixTQUFLLEtBQUwsQ0FBVyxXQUFYLENBQXVCLElBQXZCLENBQTRCLFdBQUEsQ0FBQSxRQUFBLENBQVMsTUFBTSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQUssZUFBTCxDQUFxQixHQUFyQixDQUF5QixNQUFNLENBQUMsR0FBaEM7QUFBb0MsS0FBdkQsQ0FBNUIsRUFBc0YsU0FBdEYsQ0FDRSxNQUFPO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQUssT0FBTCxHQUFlLElBQWY7QUFBbUIsS0FENUIsRUFFRSxNQUFPO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQUssS0FBTCxHQUFhLElBQWI7QUFBaUIsS0FGMUI7QUFJRDs7QUFYMkIsQ0FBOUI7Ozs7QUFBYSxpQkFBaUIsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBSjdCLE1BQUEsQ0FBQSxTQUFBLENBQVU7QUFDVCxFQUFBLFFBQVEsRUFBRSxjQUREO0FBRVQsRUFBQSxRQUFBLEVBQUEsT0FBQSxDQUFhLDJCQUFiO0FBRlMsQ0FBVixDQUk2QixFLHlDQUlTLGtCQUFBLENBQUEsZSxFQUFnQyxRQUFBLENBQUEsYyxFQUp6QyxDQUFBLEVBQWpCLGlCQUFpQixDQUFqQjs7OztBQUFBLE9BQUEsQ0FBQSxpQkFBQSxHQUFBLGlCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IG1lcmdlTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQgeyBBY3RpdmF0ZVNlcnZpY2UgfSBmcm9tICcuL2FjdGl2YXRlLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdqaGktYWN0aXZhdGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vYWN0aXZhdGUuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBBY3RpdmF0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGVycm9yID0gZmFsc2U7XG4gIHN1Y2Nlc3MgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFjdGl2YXRlU2VydmljZTogQWN0aXZhdGVTZXJ2aWNlLCBwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnJvdXRlLnF1ZXJ5UGFyYW1zLnBpcGUobWVyZ2VNYXAocGFyYW1zID0+IHRoaXMuYWN0aXZhdGVTZXJ2aWNlLmdldChwYXJhbXMua2V5KSkpLnN1YnNjcmliZShcbiAgICAgICgpID0+ICh0aGlzLnN1Y2Nlc3MgPSB0cnVlKSxcbiAgICAgICgpID0+ICh0aGlzLmVycm9yID0gdHJ1ZSlcbiAgICApO1xuICB9XG59XG4iXX0=