95c7968b9a84fa9b4e6905b57dde184d
"use strict";

/* istanbul ignore next */
function cov_mynez81jh() {
  var path = "/home/karthik/cynapseTech/src/main/webapp/app/admin/metrics/metrics.component.ts";
  var hash = "94dc09fdb8007bda5c3f70a48af9811619b7a799";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/karthik/cynapseTech/src/main/webapp/app/admin/metrics/metrics.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 45
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "12": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "13": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "14": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "15": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "16": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 47
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 89
        }
      },
      "18": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 137
        }
      },
      "19": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 42,
          column: 21
        }
      },
      "20": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 48
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 14
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 109
          },
          end: {
            line: 19,
            column: 110
          }
        },
        loc: {
          start: {
            line: 19,
            column: 136
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 71
          },
          end: {
            line: 28,
            column: 77
          }
        }, {
          start: {
            line: 28,
            column: 80
          },
          end: {
            line: 28,
            column: 87
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: 28,
            column: 55
          },
          end: {
            line: 28,
            column: 68
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 32,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 88
          }
        }, {
          start: {
            line: 32,
            column: 93
          },
          end: {
            line: 32,
            column: 135
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 72
          },
          end: {
            line: 32,
            column: 78
          }
        }, {
          start: {
            line: 32,
            column: 81
          },
          end: {
            line: 32,
            column: 88
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 52
          }
        }, {
          start: {
            line: 32,
            column: 56
          },
          end: {
            line: 32,
            column: 69
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/home/karthik/cynapseTech/src/main/webapp/app/admin/metrics/metrics.component.ts",
      mappings: ";;;;AAAA,wCAA8F;AAC9F,+BAAqC;AAErC,uDAAmD;AAQnD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAK3B,YAAoB,cAA8B,EAAU,cAAiC;QAAzE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAF7F,oBAAe,GAAG,IAAI,CAAC;IAEyE,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,oBAAa,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,EAAE;YACtH,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,GAAkB;;QACjC,OAAO,OAAO,OAAC,IAAI,CAAC,OAAO,0CAAG,GAAG,EAAE,CAAC;IACtC,CAAC;IAED,iCAAiC,CAAC,GAAkB;;QAClD,OAAO,OAAO,CAAC,OAAA,IAAI,CAAC,OAAO,0CAAG,GAAG,MAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;IACpF,CAAC;CACF,CAAA;AA5BY,gBAAgB;IAL5B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,kBAAa,0BAA0B,CAAA;QACvC,eAAe,EAAE,8BAAuB,CAAC,MAAM;KAChD,CAAC;6CAMoC,gCAAc,EAA0B,wBAAiB;GALlF,gBAAgB,CA4B5B;AA5BY,4CAAgB",
      names: [],
      sources: ["/home/karthik/cynapseTech/src/main/webapp/app/admin/metrics/metrics.component.ts"],
      sourcesContent: ["import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { MetricsService } from './metrics.service';\nimport { Metrics, Thread } from './metrics.model';\n\n@Component({\n  selector: 'jhi-metrics',\n  templateUrl: './metrics.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MetricsComponent implements OnInit {\n  metrics?: Metrics;\n  threads?: Thread[];\n  updatingMetrics = true;\n\n  constructor(private metricsService: MetricsService, private changeDetector: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(): void {\n    this.updatingMetrics = true;\n    combineLatest([this.metricsService.getMetrics(), this.metricsService.threadDump()]).subscribe(([metrics, threadDump]) => {\n      this.metrics = metrics;\n      this.threads = threadDump.threads;\n      this.updatingMetrics = false;\n      this.changeDetector.markForCheck();\n    });\n  }\n\n  metricsKeyExists(key: keyof Metrics): boolean {\n    return Boolean(this.metrics?.[key]);\n  }\n\n  metricsKeyExistsAndObjectNotEmpty(key: keyof Metrics): boolean {\n    return Boolean(this.metrics?.[key] && JSON.stringify(this.metrics[key]) !== '{}');\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "94dc09fdb8007bda5c3f70a48af9811619b7a799"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mynez81jh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_mynez81jh();
cov_mynez81jh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_mynez81jh().s[1]++;
exports.MetricsComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_mynez81jh().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_mynez81jh().s[3]++, require("@angular/core"));
const rxjs_1 =
/* istanbul ignore next */
(cov_mynez81jh().s[4]++, require("rxjs"));
const metrics_service_1 =
/* istanbul ignore next */
(cov_mynez81jh().s[5]++, require("./metrics.service"));

/* istanbul ignore next */
cov_mynez81jh().s[6]++;
let MetricsComponent = class MetricsComponent {
  constructor(metricsService, changeDetector) {
    /* istanbul ignore next */
    cov_mynez81jh().f[0]++;
    cov_mynez81jh().s[7]++;
    this.metricsService = metricsService;

    /* istanbul ignore next */
    cov_mynez81jh().s[8]++;
    this.changeDetector = changeDetector;

    /* istanbul ignore next */
    cov_mynez81jh().s[9]++;
    this.updatingMetrics = true;
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_mynez81jh().f[1]++;
    cov_mynez81jh().s[10]++;
    this.refresh();
  }

  refresh() {
    /* istanbul ignore next */
    cov_mynez81jh().f[2]++;
    cov_mynez81jh().s[11]++;
    this.updatingMetrics = true;

    /* istanbul ignore next */
    cov_mynez81jh().s[12]++;
    rxjs_1.combineLatest([this.metricsService.getMetrics(), this.metricsService.threadDump()]).subscribe(([metrics, threadDump]) => {
      /* istanbul ignore next */
      cov_mynez81jh().f[3]++;
      cov_mynez81jh().s[13]++;
      this.metrics = metrics;

      /* istanbul ignore next */
      cov_mynez81jh().s[14]++;
      this.threads = threadDump.threads;

      /* istanbul ignore next */
      cov_mynez81jh().s[15]++;
      this.updatingMetrics = false;

      /* istanbul ignore next */
      cov_mynez81jh().s[16]++;
      this.changeDetector.markForCheck();
    });
  }

  metricsKeyExists(key) {
    /* istanbul ignore next */
    cov_mynez81jh().f[4]++;

    var _a;

    /* istanbul ignore next */
    cov_mynez81jh().s[17]++;
    return Boolean(
    /* istanbul ignore next */
    (cov_mynez81jh().b[1][0]++, (_a = this.metrics) === null) ||
    /* istanbul ignore next */
    (cov_mynez81jh().b[1][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_mynez81jh().b[0][0]++, void 0) :
    /* istanbul ignore next */
    (cov_mynez81jh().b[0][1]++, _a[key]));
  }

  metricsKeyExistsAndObjectNotEmpty(key) {
    /* istanbul ignore next */
    cov_mynez81jh().f[5]++;

    var _a;

    /* istanbul ignore next */
    cov_mynez81jh().s[18]++;
    return Boolean(
    /* istanbul ignore next */
    (cov_mynez81jh().b[2][0]++,
    /* istanbul ignore next */
    (cov_mynez81jh().b[4][0]++, (_a = this.metrics) === null) ||
    /* istanbul ignore next */
    (cov_mynez81jh().b[4][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_mynez81jh().b[3][0]++, void 0) :
    /* istanbul ignore next */
    (cov_mynez81jh().b[3][1]++, _a[key])) &&
    /* istanbul ignore next */
    (cov_mynez81jh().b[2][1]++, JSON.stringify(this.metrics[key]) !== '{}'));
  }

};

/* istanbul ignore next */
cov_mynez81jh().s[19]++;
MetricsComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-metrics',
  template: require('./metrics.component.html'),
  changeDetection: core_1.ChangeDetectionStrategy.OnPush
}), tslib_1.__metadata("design:paramtypes", [metrics_service_1.MetricsService, core_1.ChangeDetectorRef])], MetricsComponent);

/* istanbul ignore next */
cov_mynez81jh().s[20]++;
exports.MetricsComponent = MetricsComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2thcnRoaWsvY3luYXBzZVRlY2gvc3JjL21haW4vd2ViYXBwL2FwcC9hZG1pbi9tZXRyaWNzL21ldHJpY3MuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcEJILE1BQUEsTUFBQTtBQUFBO0FBQUEseUJBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxNQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsTUFBQSxDQUFBLENBQUE7QUFFQSxNQUFBLGlCQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBOzs7O0FBUUEsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBYixDQUE2QjtBQUszQixFQUFBLFdBQUEsQ0FBb0IsY0FBcEIsRUFBNEQsY0FBNUQsRUFBNkY7QUFBQTtBQUFBO0FBQUE7QUFBekUsU0FBQSxjQUFBLEdBQUEsY0FBQTs7QUFBeUU7QUFBQTtBQUFqQyxTQUFBLGNBQUEsR0FBQSxjQUFBOztBQUFpQztBQUFBO0FBRjdGLFNBQUEsZUFBQSxHQUFrQixJQUFsQjtBQUVpRzs7QUFFakcsRUFBQSxRQUFRLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTixTQUFLLE9BQUw7QUFDRDs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNMLFNBQUssZUFBTCxHQUF1QixJQUF2Qjs7QUFESztBQUFBO0FBRUwsSUFBQSxNQUFBLENBQUEsYUFBQSxDQUFjLENBQUMsS0FBSyxjQUFMLENBQW9CLFVBQXBCLEVBQUQsRUFBbUMsS0FBSyxjQUFMLENBQW9CLFVBQXBCLEVBQW5DLENBQWQsRUFBb0YsU0FBcEYsQ0FBOEYsQ0FBQyxDQUFDLE9BQUQsRUFBVSxVQUFWLENBQUQsS0FBMEI7QUFBQTtBQUFBO0FBQUE7QUFDdEgsV0FBSyxPQUFMLEdBQWUsT0FBZjs7QUFEc0g7QUFBQTtBQUV0SCxXQUFLLE9BQUwsR0FBZSxVQUFVLENBQUMsT0FBMUI7O0FBRnNIO0FBQUE7QUFHdEgsV0FBSyxlQUFMLEdBQXVCLEtBQXZCOztBQUhzSDtBQUFBO0FBSXRILFdBQUssY0FBTCxDQUFvQixZQUFwQjtBQUNELEtBTEQ7QUFNRDs7QUFFRCxFQUFBLGdCQUFnQixDQUFDLEdBQUQsRUFBbUI7QUFBQTtBQUFBOzs7O0FBQUE7QUFBQTtBQUNqQyxXQUFPLE9BQU87QUFBQTtBQUFBLGlDQUFBLEVBQUEsR0FBQyxLQUFLLE9BQU4sTUFBYSxJQUFiO0FBQUE7QUFBQSxnQ0FBYSxFQUFBLEtBQUEsS0FBQSxDQUFiO0FBQUE7QUFBQSxnQ0FBYSxLQUFBLENBQWI7QUFBQTtBQUFBLGdDQUFhLEVBQUEsQ0FBRyxHQUFILENBQWIsQ0FBQSxDQUFkO0FBQ0Q7O0FBRUQsRUFBQSxpQ0FBaUMsQ0FBQyxHQUFELEVBQW1CO0FBQUE7QUFBQTs7OztBQUFBO0FBQUE7QUFDbEQsV0FBTyxPQUFPO0FBQUM7QUFBQTtBQUFBO0FBQUEsaUNBQUEsRUFBQSxHQUFBLEtBQUssT0FBTCxNQUFZLElBQVo7QUFBQTtBQUFBLGdDQUFZLEVBQUEsS0FBQSxLQUFBLENBQVo7QUFBQTtBQUFBLGdDQUFZLEtBQUEsQ0FBWjtBQUFBO0FBQUEsZ0NBQVksRUFBQSxDQUFHLEdBQUgsQ0FBWixDQUFBO0FBQUE7QUFBQSxnQ0FBdUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxLQUFLLE9BQUwsQ0FBYSxHQUFiLENBQWYsTUFBc0MsSUFBN0QsQ0FBRCxDQUFkO0FBQ0Q7O0FBM0IwQixDQUE3Qjs7OztBQUFhLGdCQUFnQixHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FMNUIsTUFBQSxDQUFBLFNBQUEsQ0FBVTtBQUNULEVBQUEsUUFBUSxFQUFFLGFBREQ7QUFFVCxFQUFBLFFBQUEsRUFBQSxPQUFBLENBQWEsMEJBQWIsQ0FGUztBQUdULEVBQUEsZUFBZSxFQUFFLE1BQUEsQ0FBQSx1QkFBQSxDQUF3QjtBQUhoQyxDQUFWLENBSzRCLEUseUNBS1MsaUJBQUEsQ0FBQSxjLEVBQXdDLE1BQUEsQ0FBQSxpQixFQUxqRCxDQUFBLEVBQWhCLGdCQUFnQixDQUFoQjs7OztBQUFBLE9BQUEsQ0FBQSxnQkFBQSxHQUFBLGdCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29tYmluZUxhdGVzdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBNZXRyaWNzU2VydmljZSB9IGZyb20gJy4vbWV0cmljcy5zZXJ2aWNlJztcbmltcG9ydCB7IE1ldHJpY3MsIFRocmVhZCB9IGZyb20gJy4vbWV0cmljcy5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2poaS1tZXRyaWNzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21ldHJpY3MuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTWV0cmljc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIG1ldHJpY3M/OiBNZXRyaWNzO1xuICB0aHJlYWRzPzogVGhyZWFkW107XG4gIHVwZGF0aW5nTWV0cmljcyA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtZXRyaWNzU2VydmljZTogTWV0cmljc1NlcnZpY2UsIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbiAgcmVmcmVzaCgpOiB2b2lkIHtcbiAgICB0aGlzLnVwZGF0aW5nTWV0cmljcyA9IHRydWU7XG4gICAgY29tYmluZUxhdGVzdChbdGhpcy5tZXRyaWNzU2VydmljZS5nZXRNZXRyaWNzKCksIHRoaXMubWV0cmljc1NlcnZpY2UudGhyZWFkRHVtcCgpXSkuc3Vic2NyaWJlKChbbWV0cmljcywgdGhyZWFkRHVtcF0pID0+IHtcbiAgICAgIHRoaXMubWV0cmljcyA9IG1ldHJpY3M7XG4gICAgICB0aGlzLnRocmVhZHMgPSB0aHJlYWREdW1wLnRocmVhZHM7XG4gICAgICB0aGlzLnVwZGF0aW5nTWV0cmljcyA9IGZhbHNlO1xuICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKTtcbiAgICB9KTtcbiAgfVxuXG4gIG1ldHJpY3NLZXlFeGlzdHMoa2V5OiBrZXlvZiBNZXRyaWNzKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy5tZXRyaWNzPy5ba2V5XSk7XG4gIH1cblxuICBtZXRyaWNzS2V5RXhpc3RzQW5kT2JqZWN0Tm90RW1wdHkoa2V5OiBrZXlvZiBNZXRyaWNzKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy5tZXRyaWNzPy5ba2V5XSAmJiBKU09OLnN0cmluZ2lmeSh0aGlzLm1ldHJpY3Nba2V5XSkgIT09ICd7fScpO1xuICB9XG59XG4iXX0=