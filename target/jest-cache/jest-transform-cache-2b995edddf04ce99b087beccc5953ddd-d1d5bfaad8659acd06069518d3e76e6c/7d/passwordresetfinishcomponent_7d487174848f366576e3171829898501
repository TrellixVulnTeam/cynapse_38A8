95ca81cb7ee7a0f0571dfba821a57ca3
"use strict";

/* istanbul ignore next */
function cov_15cfn3ihsj() {
  var path = "/home/karthik/cynapseTech/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts";
  var hash = "f16a157fdf1032d97efa89d59e157fe7b1c6828f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/karthik/cynapseTech/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 40
        },
        end: {
          line: 8,
          column: 82
        }
      },
      "7": {
        start: {
          line: 9,
          column: 35
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 69
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 21
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 22
        }
      },
      "16": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 22,
          column: 11
        }
      },
      "17": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "18": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "19": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "20": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "21": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "22": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "23": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "24": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 27
        }
      },
      "25": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 72
        }
      },
      "26": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 80
        }
      },
      "27": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "28": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 35
        }
      },
      "29": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 138
        }
      },
      "30": {
        start: {
          line: 46,
          column: 89
        },
        end: {
          line: 46,
          column: 108
        }
      },
      "31": {
        start: {
          line: 46,
          column: 118
        },
        end: {
          line: 46,
          column: 135
        }
      },
      "32": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "33": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "34": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 55
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 25,
            column: 42
          }
        },
        loc: {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 22
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 18
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 82
          },
          end: {
            line: 46,
            column: 83
          }
        },
        loc: {
          start: {
            line: 46,
            column: 89
          },
          end: {
            line: 46,
            column: 108
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 46,
            column: 111
          },
          end: {
            line: 46,
            column: 112
          }
        },
        loc: {
          start: {
            line: 46,
            column: 118
          },
          end: {
            line: 46,
            column: 135
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/home/karthik/cynapseTech/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts",
      mappings: ";;;;AAAA,wCAAwF;AACxF,0CAAyD;AACzD,4CAAiD;AAEjD,mFAA6E;AAM7E,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAevC,YAAoB,0BAAsD,EAAU,KAAqB,EAAU,EAAe;QAA9G,+BAA0B,GAA1B,0BAA0B,CAA4B;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAXlI,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QACnB,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;QAChB,QAAG,GAAG,EAAE,CAAC;QAET,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3F,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;IAEkI,CAAC;IAEtI,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;gBACjB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACxC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAE,CAAC,KAAK,CAAC;QAClE,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAE,CAAC,KAAK,CAAC;QAE1E,IAAI,WAAW,KAAK,eAAe,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,SAAS,CACnE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAC3B,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAC1B,CAAC;SACH;IACH,CAAC;CACF,CAAA;AA9CC;IADC,gBAAS,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sCAC9B,iBAAU;iEAAC;AAFd,4BAA4B;IAJxC,gBAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,kBAAa,wCAAwC,CAAA;KACtD,CAAC;6CAgBgD,0DAA0B,EAAiB,uBAAc,EAAc,mBAAW;GAfvH,4BAA4B,CAgDxC;AAhDY,oEAA4B",
      names: [],
      sources: ["/home/karthik/cynapseTech/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts"],
      sourcesContent: ["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PasswordResetFinishService } from './password-reset-finish.service';\n\n@Component({\n  selector: 'jhi-password-reset-finish',\n  templateUrl: './password-reset-finish.component.html',\n})\nexport class PasswordResetFinishComponent implements OnInit, AfterViewInit {\n  @ViewChild('newPassword', { static: false })\n  newPassword?: ElementRef;\n\n  initialized = false;\n  doNotMatch = false;\n  error = false;\n  success = false;\n  key = '';\n\n  passwordForm = this.fb.group({\n    newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n  });\n\n  constructor(private passwordResetFinishService: PasswordResetFinishService, private route: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['key']) {\n        this.key = params['key'];\n      }\n      this.initialized = true;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.newPassword) {\n      this.newPassword.nativeElement.focus();\n    }\n  }\n\n  finishReset(): void {\n    this.doNotMatch = false;\n    this.error = false;\n\n    const newPassword = this.passwordForm.get(['newPassword'])!.value;\n    const confirmPassword = this.passwordForm.get(['confirmPassword'])!.value;\n\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordResetFinishService.save(this.key, newPassword).subscribe(\n        () => (this.success = true),\n        () => (this.error = true)\n      );\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f16a157fdf1032d97efa89d59e157fe7b1c6828f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15cfn3ihsj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_15cfn3ihsj();
cov_15cfn3ihsj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_15cfn3ihsj().s[1]++;
exports.PasswordResetFinishComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_15cfn3ihsj().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_15cfn3ihsj().s[3]++, require("@angular/core"));
const forms_1 =
/* istanbul ignore next */
(cov_15cfn3ihsj().s[4]++, require("@angular/forms"));
const router_1 =
/* istanbul ignore next */
(cov_15cfn3ihsj().s[5]++, require("@angular/router"));
const password_reset_finish_service_1 =
/* istanbul ignore next */
(cov_15cfn3ihsj().s[6]++, require("./password-reset-finish.service"));

/* istanbul ignore next */
cov_15cfn3ihsj().s[7]++;
let PasswordResetFinishComponent = class PasswordResetFinishComponent {
  constructor(passwordResetFinishService, route, fb) {
    /* istanbul ignore next */
    cov_15cfn3ihsj().f[0]++;
    cov_15cfn3ihsj().s[8]++;
    this.passwordResetFinishService = passwordResetFinishService;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[9]++;
    this.route = route;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[10]++;
    this.fb = fb;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[11]++;
    this.initialized = false;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[12]++;
    this.doNotMatch = false;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[13]++;
    this.error = false;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[14]++;
    this.success = false;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[15]++;
    this.key = '';

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[16]++;
    this.passwordForm = this.fb.group({
      newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]],
      confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]]
    });
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_15cfn3ihsj().f[1]++;
    cov_15cfn3ihsj().s[17]++;
    this.route.queryParams.subscribe(params => {
      /* istanbul ignore next */
      cov_15cfn3ihsj().f[2]++;
      cov_15cfn3ihsj().s[18]++;

      if (params['key']) {
        /* istanbul ignore next */
        cov_15cfn3ihsj().b[0][0]++;
        cov_15cfn3ihsj().s[19]++;
        this.key = params['key'];
      } else
      /* istanbul ignore next */
      {
        cov_15cfn3ihsj().b[0][1]++;
      }

      cov_15cfn3ihsj().s[20]++;
      this.initialized = true;
    });
  }

  ngAfterViewInit() {
    /* istanbul ignore next */
    cov_15cfn3ihsj().f[3]++;
    cov_15cfn3ihsj().s[21]++;

    if (this.newPassword) {
      /* istanbul ignore next */
      cov_15cfn3ihsj().b[1][0]++;
      cov_15cfn3ihsj().s[22]++;
      this.newPassword.nativeElement.focus();
    } else
    /* istanbul ignore next */
    {
      cov_15cfn3ihsj().b[1][1]++;
    }
  }

  finishReset() {
    /* istanbul ignore next */
    cov_15cfn3ihsj().f[4]++;
    cov_15cfn3ihsj().s[23]++;
    this.doNotMatch = false;

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[24]++;
    this.error = false;
    const newPassword =
    /* istanbul ignore next */
    (cov_15cfn3ihsj().s[25]++, this.passwordForm.get(['newPassword']).value);
    const confirmPassword =
    /* istanbul ignore next */
    (cov_15cfn3ihsj().s[26]++, this.passwordForm.get(['confirmPassword']).value);

    /* istanbul ignore next */
    cov_15cfn3ihsj().s[27]++;

    if (newPassword !== confirmPassword) {
      /* istanbul ignore next */
      cov_15cfn3ihsj().b[2][0]++;
      cov_15cfn3ihsj().s[28]++;
      this.doNotMatch = true;
    } else {
      /* istanbul ignore next */
      cov_15cfn3ihsj().b[2][1]++;
      cov_15cfn3ihsj().s[29]++;
      this.passwordResetFinishService.save(this.key, newPassword).subscribe(() => {
        /* istanbul ignore next */
        cov_15cfn3ihsj().f[5]++;
        cov_15cfn3ihsj().s[30]++;
        return this.success = true;
      }, () => {
        /* istanbul ignore next */
        cov_15cfn3ihsj().f[6]++;
        cov_15cfn3ihsj().s[31]++;
        return this.error = true;
      });
    }
  }

};

/* istanbul ignore next */
cov_15cfn3ihsj().s[32]++;

tslib_1.__decorate([core_1.ViewChild('newPassword', {
  static: false
}), tslib_1.__metadata("design:type", core_1.ElementRef)], PasswordResetFinishComponent.prototype, "newPassword", void 0);

/* istanbul ignore next */
cov_15cfn3ihsj().s[33]++;
PasswordResetFinishComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-password-reset-finish',
  template: require('./password-reset-finish.component.html')
}), tslib_1.__metadata("design:paramtypes", [password_reset_finish_service_1.PasswordResetFinishService, router_1.ActivatedRoute, forms_1.FormBuilder])], PasswordResetFinishComponent);

/* istanbul ignore next */
cov_15cfn3ihsj().s[34]++;
exports.PasswordResetFinishComponent = PasswordResetFinishComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2thcnRoaWsvY3luYXBzZVRlY2gvc3JjL21haW4vd2ViYXBwL2FwcC9hY2NvdW50L3Bhc3N3b3JkLXJlc2V0L2ZpbmlzaC9wYXNzd29yZC1yZXNldC1maW5pc2guY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaEJGLE1BQUEs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ZUFBcEIsRUFBcUM7QUFBQTtBQUFBO0FBQUE7QUFDbkMsV0FBSyxVQUFMLEdBQWtCLElBQWxCO0FBQ0QsS0FGRCxNQUVPO0FBQUE7QUFBQTtBQUFBO0FBQ0wsV0FBSywwQkFBTCxDQUFnQyxJQUFoQyxDQUFxQyxLQUFLLEdBQTFDLEVBQStDLFdBQS9DLEVBQTRELFNBQTVELENBQ0UsTUFBTztBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUFLLE9BQUwsR0FBZSxJQUFmO0FBQW1CLE9BRDVCLEVBRUUsTUFBTztBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUFLLEtBQUwsR0FBYSxJQUFiO0FBQWlCLE9BRjFCO0FBSUQ7QUFDRjs7QUEvQ3NDLENBQXpDOzs7OztBQUVFLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEQyxNQUFBLENBQUEsU0FBQSxDQUFVLGFBQVYsRUFBeUI7QUFBRSxFQUFBLE1BQU0sRUFBRTtBQUFWLENBQXpCLENBQ0QsRSxrQ0FBYyxNQUFBLENBQUEsVSxDQUFkLENBQUEsRSxzQ0FBQSxFLGFBQUEsRSxLQUF5QixDQUF6Qjs7OztBQUZXLDRCQUE0QixHQUFBLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FKeEMsTUFBQSxDQUFBLFNBQUEsQ0FBVTtBQUNULEVBQUEsUUFBUSxFQUFFLDJCQUREO0FBRVQsRUFBQSxRQUFBLEVBQUEsT0FBQSxDQUFhLHdDQUFiO0FBRlMsQ0FBVixDQUl3QyxFLHlDQWVTLCtCQUFBLENBQUEsMEIsRUFBMkMsUUFBQSxDQUFBLGMsRUFBNEIsT0FBQSxDQUFBLFcsRUFmaEYsQ0FBQSxFQUE1Qiw0QkFBNEIsQ0FBNUI7Ozs7QUFBQSxPQUFBLENBQUEsNEJBQUEsR0FBQSw0QkFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBQYXNzd29yZFJlc2V0RmluaXNoU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQtcmVzZXQtZmluaXNoLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdqaGktcGFzc3dvcmQtcmVzZXQtZmluaXNoJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Bhc3N3b3JkLXJlc2V0LWZpbmlzaC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkUmVzZXRGaW5pc2hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICBAVmlld0NoaWxkKCduZXdQYXNzd29yZCcsIHsgc3RhdGljOiBmYWxzZSB9KVxuICBuZXdQYXNzd29yZD86IEVsZW1lbnRSZWY7XG5cbiAgaW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgZG9Ob3RNYXRjaCA9IGZhbHNlO1xuICBlcnJvciA9IGZhbHNlO1xuICBzdWNjZXNzID0gZmFsc2U7XG4gIGtleSA9ICcnO1xuXG4gIHBhc3N3b3JkRm9ybSA9IHRoaXMuZmIuZ3JvdXAoe1xuICAgIG5ld1Bhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCg0KSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNTApXV0sXG4gICAgY29uZmlybVBhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCg0KSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNTApXV0sXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFzc3dvcmRSZXNldEZpbmlzaFNlcnZpY2U6IFBhc3N3b3JkUmVzZXRGaW5pc2hTZXJ2aWNlLCBwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgcHJpdmF0ZSBmYjogRm9ybUJ1aWxkZXIpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5yb3V0ZS5xdWVyeVBhcmFtcy5zdWJzY3JpYmUocGFyYW1zID0+IHtcbiAgICAgIGlmIChwYXJhbXNbJ2tleSddKSB7XG4gICAgICAgIHRoaXMua2V5ID0gcGFyYW1zWydrZXknXTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIH0pO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLm5ld1Bhc3N3b3JkKSB7XG4gICAgICB0aGlzLm5ld1Bhc3N3b3JkLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICBmaW5pc2hSZXNldCgpOiB2b2lkIHtcbiAgICB0aGlzLmRvTm90TWF0Y2ggPSBmYWxzZTtcbiAgICB0aGlzLmVycm9yID0gZmFsc2U7XG5cbiAgICBjb25zdCBuZXdQYXNzd29yZCA9IHRoaXMucGFzc3dvcmRGb3JtLmdldChbJ25ld1Bhc3N3b3JkJ10pIS52YWx1ZTtcbiAgICBjb25zdCBjb25maXJtUGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkRm9ybS5nZXQoWydjb25maXJtUGFzc3dvcmQnXSkhLnZhbHVlO1xuXG4gICAgaWYgKG5ld1Bhc3N3b3JkICE9PSBjb25maXJtUGFzc3dvcmQpIHtcbiAgICAgIHRoaXMuZG9Ob3RNYXRjaCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGFzc3dvcmRSZXNldEZpbmlzaFNlcnZpY2Uuc2F2ZSh0aGlzLmtleSwgbmV3UGFzc3dvcmQpLnN1YnNjcmliZShcbiAgICAgICAgKCkgPT4gKHRoaXMuc3VjY2VzcyA9IHRydWUpLFxuICAgICAgICAoKSA9PiAodGhpcy5lcnJvciA9IHRydWUpXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuIl19