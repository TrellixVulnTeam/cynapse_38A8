b139474aa757d0cc86c4190ffcd20e5e
"use strict";

/* istanbul ignore next */
function cov_do7irlc4p() {
  var path = "/home/karthik/cynapseTech/src/main/webapp/app/shared/auth/has-any-authority.directive.ts";
  var hash = "992efc301756155f80fe071170701130a5d6b574";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/karthik/cynapseTech/src/main/webapp/app/shared/auth/has-any-authority.directive.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "6": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 8,
          column: 66
        }
      },
      "7": {
        start: {
          line: 20,
          column: 31
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 39
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 45
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "18": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 85
        }
      },
      "19": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "20": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "21": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 71
        }
      },
      "22": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 54,
          column: 67
        }
      },
      "23": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 60,
          column: 29
        }
      },
      "24": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 24
          }
        },
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 36,
            column: 9
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/home/karthik/cynapseTech/src/main/webapp/app/shared/auth/has-any-authority.directive.ts",
      mappings: ";;;;AAAA,wCAA2F;AAC3F,+BAA+B;AAC/B,8CAA2C;AAE3C,mEAA+D;AAE/D;;;;;;;;;;GAUG;AAIH,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAKnC,YAAoB,cAA8B,EAAU,WAA6B,EAAU,gBAAkC;QAAjH,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAFpH,aAAQ,GAAG,IAAI,cAAO,EAAQ,CAAC;IAEwF,CAAC;IAGzI,IAAI,kBAAkB,CAAC,KAAwB;QAC7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,uDAAuD;QACvD,IAAI,CAAC,cAAc;aAChB,sBAAsB,EAAE;aACxB,IAAI,CAAC,qBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAEO,UAAU;QAChB,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5D;IACH,CAAC;CACF,CAAA;AAxBC;IADC,YAAK,EAAE;;;kEAWP;AAlBU,wBAAwB;IAHpC,gBAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;KACjC,CAAC;6CAMoC,gCAAc,EAAuB,kBAAW,EAAiC,uBAAgB;GAL1H,wBAAwB,CAgCpC;AAhCY,4DAAwB",
      names: [],
      sources: ["/home/karthik/cynapseTech/src/main/webapp/app/shared/auth/has-any-authority.directive.ts"],
      sourcesContent: ["import { Directive, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n  selector: '[jhiHasAnyAuthority]',\n})\nexport class HasAnyAuthorityDirective implements OnDestroy {\n  private authorities!: string | string[];\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\n\n  @Input()\n  set jhiHasAnyAuthority(value: string | string[]) {\n    this.authorities = value;\n    this.updateView();\n    // Get notified each time authentication state changes.\n    this.accountService\n      .getAuthenticationState()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateView();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateView(): void {\n    const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n    this.viewContainerRef.clear();\n    if (hasAnyAuthority) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "992efc301756155f80fe071170701130a5d6b574"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_do7irlc4p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_do7irlc4p();
cov_do7irlc4p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_do7irlc4p().s[1]++;
exports.HasAnyAuthorityDirective = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_do7irlc4p().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_do7irlc4p().s[3]++, require("@angular/core"));
const rxjs_1 =
/* istanbul ignore next */
(cov_do7irlc4p().s[4]++, require("rxjs"));
const operators_1 =
/* istanbul ignore next */
(cov_do7irlc4p().s[5]++, require("rxjs/operators"));
const account_service_1 =
/* istanbul ignore next */
(cov_do7irlc4p().s[6]++, require("app/core/auth/account.service"));
/**
 * @whatItDoes Conditionally includes an HTML element if current user has any
 * of the authorities passed as the `expression`.
 *
 * @howToUse
 * ```
 *     <some-element *jhiHasAnyAuthority="'ROLE_ADMIN'">...</some-element>
 *
 *     <some-element *jhiHasAnyAuthority="['ROLE_ADMIN', 'ROLE_USER']">...</some-element>
 * ```
 */

/* istanbul ignore next */
cov_do7irlc4p().s[7]++;
let HasAnyAuthorityDirective = class HasAnyAuthorityDirective {
  constructor(accountService, templateRef, viewContainerRef) {
    /* istanbul ignore next */
    cov_do7irlc4p().f[0]++;
    cov_do7irlc4p().s[8]++;
    this.accountService = accountService;

    /* istanbul ignore next */
    cov_do7irlc4p().s[9]++;
    this.templateRef = templateRef;

    /* istanbul ignore next */
    cov_do7irlc4p().s[10]++;
    this.viewContainerRef = viewContainerRef;

    /* istanbul ignore next */
    cov_do7irlc4p().s[11]++;
    this.destroy$ = new rxjs_1.Subject();
  }

  set jhiHasAnyAuthority(value) {
    /* istanbul ignore next */
    cov_do7irlc4p().f[1]++;
    cov_do7irlc4p().s[12]++;
    this.authorities = value;

    /* istanbul ignore next */
    cov_do7irlc4p().s[13]++;
    this.updateView(); // Get notified each time authentication state changes.

    /* istanbul ignore next */
    cov_do7irlc4p().s[14]++;
    this.accountService.getAuthenticationState().pipe(operators_1.takeUntil(this.destroy$)).subscribe(() => {
      /* istanbul ignore next */
      cov_do7irlc4p().f[2]++;
      cov_do7irlc4p().s[15]++;
      this.updateView();
    });
  }

  ngOnDestroy() {
    /* istanbul ignore next */
    cov_do7irlc4p().f[3]++;
    cov_do7irlc4p().s[16]++;
    this.destroy$.next();

    /* istanbul ignore next */
    cov_do7irlc4p().s[17]++;
    this.destroy$.complete();
  }

  updateView() {
    /* istanbul ignore next */
    cov_do7irlc4p().f[4]++;
    const hasAnyAuthority =
    /* istanbul ignore next */
    (cov_do7irlc4p().s[18]++, this.accountService.hasAnyAuthority(this.authorities));

    /* istanbul ignore next */
    cov_do7irlc4p().s[19]++;
    this.viewContainerRef.clear();

    /* istanbul ignore next */
    cov_do7irlc4p().s[20]++;

    if (hasAnyAuthority) {
      /* istanbul ignore next */
      cov_do7irlc4p().b[0][0]++;
      cov_do7irlc4p().s[21]++;
      this.viewContainerRef.createEmbeddedView(this.templateRef);
    } else
    /* istanbul ignore next */
    {
      cov_do7irlc4p().b[0][1]++;
    }
  }

};

/* istanbul ignore next */
cov_do7irlc4p().s[22]++;

tslib_1.__decorate([core_1.Input(), tslib_1.__metadata("design:type", Object), tslib_1.__metadata("design:paramtypes", [Object])], HasAnyAuthorityDirective.prototype, "jhiHasAnyAuthority", null);

/* istanbul ignore next */
cov_do7irlc4p().s[23]++;
HasAnyAuthorityDirective = tslib_1.__decorate([core_1.Directive({
  selector: '[jhiHasAnyAuthority]'
}), tslib_1.__metadata("design:paramtypes", [account_service_1.AccountService, core_1.TemplateRef, core_1.ViewContainerRef])], HasAnyAuthorityDirective);

/* istanbul ignore next */
cov_do7irlc4p().s[24]++;
exports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2thcnRoaWsvY3luYXBzZVRlY2gvc3JjL21haW4vd2ViYXBwL2FwcC9zaGFyZWQvYXV0aC9oYXMtYW55LWF1dGhvcml0eS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBQSxNQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUE7QUFDQSxNQUFBLE1BQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsV0FBQTtBQUFBO0FBQUEseUJBQUEsT0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQTtBQUVBLE1BQUEsaUJBQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSwrQkFBQSxDQUFBLENBQUE7QUFFQTs7Ozs7Ozs7OztBQVVHOzs7O0FBSUgsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBYixDQUFxQztBQUtuQyxFQUFBLFdBQUEsQ0FBb0IsY0FBcEIsRUFBNEQsV0FBNUQsRUFBbUcsZ0JBQW5HLEVBQXFJO0FBQUE7QUFBQTtBQUFBO0FBQWpILFNBQUEsY0FBQSxHQUFBLGNBQUE7O0FBQWlIO0FBQUE7QUFBekUsU0FBQSxXQUFBLEdBQUEsV0FBQTs7QUFBeUU7QUFBQTtBQUFsQyxTQUFBLGdCQUFBLEdBQUEsZ0JBQUE7O0FBQWtDO0FBQUE7QUFGcEgsU0FBQSxRQUFBLEdBQVcsSUFBSSxNQUFBLENBQUEsT0FBSixFQUFYO0FBRXdIOztBQUd6SSxNQUFJLGtCQUFKLENBQXVCLEtBQXZCLEVBQStDO0FBQUE7QUFBQTtBQUFBO0FBQzdDLFNBQUssV0FBTCxHQUFtQixLQUFuQjs7QUFENkM7QUFBQTtBQUU3QyxTQUFLLFVBQUwsR0FGNkMsQ0FHN0M7O0FBSDZDO0FBQUE7QUFJN0MsU0FBSyxjQUFMLENBQ0csc0JBREgsR0FFRyxJQUZILENBRVEsV0FBQSxDQUFBLFNBQUEsQ0FBVSxLQUFLLFFBQWYsQ0FGUixFQUdHLFNBSEgsQ0FHYSxNQUFLO0FBQUE7QUFBQTtBQUFBO0FBQ2QsV0FBSyxVQUFMO0FBQ0QsS0FMSDtBQU1EOztBQUVELEVBQUEsV0FBVyxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1QsU0FBSyxRQUFMLENBQWMsSUFBZDs7QUFEUztBQUFBO0FBRVQsU0FBSyxRQUFMLENBQWMsUUFBZDtBQUNEOztBQUVPLEVBQUEsVUFBVSxHQUFBO0FBQUE7QUFBQTtBQUNoQixVQUFNLGVBQWU7QUFBQTtBQUFBLDhCQUFHLEtBQUssY0FBTCxDQUFvQixlQUFwQixDQUFvQyxLQUFLLFdBQXpDLENBQUgsQ0FBckI7O0FBRGdCO0FBQUE7QUFFaEIsU0FBSyxnQkFBTCxDQUFzQixLQUF0Qjs7QUFGZ0I7QUFBQTs7QUFHaEIsUUFBSSxlQUFKLEVBQXFCO0FBQUE7QUFBQTtBQUFBO0FBQ25CLFdBQUssZ0JBQUwsQ0FBc0Isa0JBQXRCLENBQXlDLEtBQUssV0FBOUM7QUFDRCxLQUZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHRDs7QUEvQmtDLENBQXJDOzs7OztBQVFFLE9BQUEsQ0FBQSxVQUFBLENBQUEsQ0FEQyxNQUFBLENBQUEsS0FBQSxFQUNELEUseUNBQUEsRSxpREFBQSxDQUFBLEUsa0NBQUEsRSxvQkFBQSxFQVVDLElBVkQ7Ozs7QUFSVyx3QkFBd0IsR0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBSHBDLE1BQUEsQ0FBQSxTQUFBLENBQVU7QUFDVCxFQUFBLFFBQVEsRUFBRTtBQURELENBQVYsQ0FHb0MsRSx5Q0FLQyxpQkFBQSxDQUFBLGMsRUFBcUMsTUFBQSxDQUFBLFcsRUFBNEMsTUFBQSxDQUFBLGdCLEVBTGxGLENBQUEsRUFBeEIsd0JBQXdCLENBQXhCOzs7O0FBQUEsT0FBQSxDQUFBLHdCQUFBLEdBQUEsd0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IEFjY291bnRTZXJ2aWNlIH0gZnJvbSAnYXBwL2NvcmUvYXV0aC9hY2NvdW50LnNlcnZpY2UnO1xuXG4vKipcbiAqIEB3aGF0SXREb2VzIENvbmRpdGlvbmFsbHkgaW5jbHVkZXMgYW4gSFRNTCBlbGVtZW50IGlmIGN1cnJlbnQgdXNlciBoYXMgYW55XG4gKiBvZiB0aGUgYXV0aG9yaXRpZXMgcGFzc2VkIGFzIHRoZSBgZXhwcmVzc2lvbmAuXG4gKlxuICogQGhvd1RvVXNlXG4gKiBgYGBcbiAqICAgICA8c29tZS1lbGVtZW50ICpqaGlIYXNBbnlBdXRob3JpdHk9XCInUk9MRV9BRE1JTidcIj4uLi48L3NvbWUtZWxlbWVudD5cbiAqXG4gKiAgICAgPHNvbWUtZWxlbWVudCAqamhpSGFzQW55QXV0aG9yaXR5PVwiWydST0xFX0FETUlOJywgJ1JPTEVfVVNFUiddXCI+Li4uPC9zb21lLWVsZW1lbnQ+XG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2poaUhhc0FueUF1dGhvcml0eV0nLFxufSlcbmV4cG9ydCBjbGFzcyBIYXNBbnlBdXRob3JpdHlEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcml2YXRlIGF1dGhvcml0aWVzITogc3RyaW5nIHwgc3RyaW5nW107XG5cbiAgcHJpdmF0ZSByZWFkb25seSBkZXN0cm95JCA9IG5ldyBTdWJqZWN0PHZvaWQ+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhY2NvdW50U2VydmljZTogQWNjb3VudFNlcnZpY2UsIHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZikge31cblxuICBASW5wdXQoKVxuICBzZXQgamhpSGFzQW55QXV0aG9yaXR5KHZhbHVlOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICAgIHRoaXMuYXV0aG9yaXRpZXMgPSB2YWx1ZTtcbiAgICB0aGlzLnVwZGF0ZVZpZXcoKTtcbiAgICAvLyBHZXQgbm90aWZpZWQgZWFjaCB0aW1lIGF1dGhlbnRpY2F0aW9uIHN0YXRlIGNoYW5nZXMuXG4gICAgdGhpcy5hY2NvdW50U2VydmljZVxuICAgICAgLmdldEF1dGhlbnRpY2F0aW9uU3RhdGUoKVxuICAgICAgLnBpcGUodGFrZVVudGlsKHRoaXMuZGVzdHJveSQpKVxuICAgICAgLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIHRoaXMudXBkYXRlVmlldygpO1xuICAgICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmRlc3Ryb3kkLm5leHQoKTtcbiAgICB0aGlzLmRlc3Ryb3kkLmNvbXBsZXRlKCk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVZpZXcoKTogdm9pZCB7XG4gICAgY29uc3QgaGFzQW55QXV0aG9yaXR5ID0gdGhpcy5hY2NvdW50U2VydmljZS5oYXNBbnlBdXRob3JpdHkodGhpcy5hdXRob3JpdGllcyk7XG4gICAgdGhpcy52aWV3Q29udGFpbmVyUmVmLmNsZWFyKCk7XG4gICAgaWYgKGhhc0FueUF1dGhvcml0eSkge1xuICAgICAgdGhpcy52aWV3Q29udGFpbmVyUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUmVmKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==