{"version":3,"sources":["/home/karthik/cynapseTech/src/main/webapp/app/entities/forms/route/forms-routing-resolve.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaU;;;;;;;;;;;;;;;;;;;;AAbV,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AAEA,MAAA,QAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AACA,MAAA,MAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,MAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AAEA,MAAA,aAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,MAAA,eAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;;;AAGA,IAAa,0BAA0B,GAAvC,MAAa,0BAAb,CAAuC;AACrC,EAAA,WAAA,CAAsB,OAAtB,EAAuD,MAAvD,EAAqE;AAAA;AAAA;AAAA;AAA/C,SAAA,OAAA,GAAA,OAAA;;AAA+C;AAAA;AAAd,SAAA,MAAA,GAAA,MAAA;AAAkB;;AAEzE,EAAA,OAAO,CAAC,KAAD,EAA8B;AAAA;AAAA;AACnC,UAAM,EAAE;AAAA;AAAA,8BAAG,KAAK,CAAC,MAAN,CAAa,IAAb,CAAH,CAAR;;AADmC;AAAA;;AAEnC,QAAI,EAAJ,EAAQ;AAAA;AAAA;AAAA;AACN,aAAO,KAAK,OAAL,CAAa,IAAb,CAAkB,EAAlB,EAAsB,IAAtB,CACL,WAAA,CAAA,QAAA,CAAU,KAAD,IAA+B;AAAA;AAAA;AAAA;;AACtC,YAAI,KAAK,CAAC,IAAV,EAAgB;AAAA;AAAA;AAAA;AACd,iBAAO,MAAA,CAAA,EAAA,CAAG,KAAK,CAAC,IAAT,CAAP;AACD,SAFD,MAEO;AAAA;AAAA;AAAA;AACL,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,KAAD,CAArB;;AADK;AAAA;AAEL,iBAAO,MAAA,CAAA,KAAP;AACD;AACF,OAPD,CADK,CAAP;AAUD,KAXD;AAAA;AAAA;AAAA;AAAA;;AAFmC;AAcnC,WAAO,MAAA,CAAA,EAAA,CAAG,IAAI,aAAA,CAAA,KAAJ,EAAH,CAAP;AACD;;AAlBoC,CAAvC;;;;AAAa,0BAA0B,GAAA,OAAA,CAAA,UAAA,CAAA,CADtC,MAAA,CAAA,UAAA,CAAW;AAAE,EAAA,UAAU,EAAE;AAAd,CAAX,CACsC,E,yCACN,eAAA,CAAA,Y,EAAgC,QAAA,CAAA,M,EAD1B,CAAA,EAA1B,0BAA0B,CAA1B;;;;AAAA,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { IForms, Forms } from '../forms.model';\nimport { FormsService } from '../service/forms.service';\n\n@Injectable({ providedIn: 'root' })\nexport class FormsRoutingResolveService implements Resolve<IForms> {\n  constructor(protected service: FormsService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IForms> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((forms: HttpResponse<Forms>) => {\n          if (forms.body) {\n            return of(forms.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Forms());\n  }\n}\n"]}