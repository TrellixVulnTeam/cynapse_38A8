d126ed2fd705b9125d4b06fd7b53b9bc
"use strict";

/* istanbul ignore next */
function cov_kzqzs6k4k() {
  var path = "/home/karthik/cynapseTech/src/main/webapp/app/admin/health/health.component.ts";
  var hash = "6595f2ec57741ab7c9eefbdaf47eb2a139ced4dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/karthik/cynapseTech/src/main/webapp/app/admin/health/health.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "5": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 33
        },
        end: {
          line: 8,
          column: 74
        }
      },
      "7": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "12": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "13": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "15": {
        start: {
          line: 26,
          column: 62
        },
        end: {
          line: 26,
          column: 82
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "17": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "18": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 94
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "20": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "21": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 45
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 14
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 52
          }
        },
        loc: {
          start: {
            line: 26,
            column: 62
          },
          end: {
            line: 26,
            column: 82
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 85
          },
          end: {
            line: 26,
            column: 86
          }
        },
        loc: {
          start: {
            line: 26,
            column: 96
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/home/karthik/cynapseTech/src/main/webapp/app/admin/health/health.component.ts",
      mappings: ";;;;AAAA,wCAAkD;AAElD,6DAAsD;AAEtD,qDAAiD;AAEjD,2EAAsE;AAMtE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAG1B,YAAoB,YAAsB,EAAU,aAA4B;QAA5D,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,WAAyB;QACrC,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,OAAO,eAAe,CAAC;SACxB;aAAM;YACL,OAAO,cAAc,CAAC;SACvB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAChC,CAAC,KAAwB,EAAE,EAAE;YAC3B,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;aAC3B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAA6C;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6CAAoB,CAAC,CAAC;QAC9D,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7C,CAAC;CACF,CAAA;AAhCY,eAAe;IAJ3B,gBAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,kBAAa,yBAAyB,CAAA;KACvC,CAAC;6CAIkC,uBAAQ,EAAyB,8BAAa;GAHrE,eAAe,CAgC3B;AAhCY,0CAAe",
      names: [],
      sources: ["/home/karthik/cynapseTech/src/main/webapp/app/admin/health/health.component.ts"],
      sourcesContent: ["import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HealthService } from './health.service';\nimport { Health, HealthDetails, HealthStatus } from './health.model';\nimport { HealthModalComponent } from './modal/health-modal.component';\n\n@Component({\n  selector: 'jhi-health',\n  templateUrl: './health.component.html',\n})\nexport class HealthComponent implements OnInit {\n  health?: Health;\n\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  getBadgeClass(statusState: HealthStatus): string {\n    if (statusState === 'UP') {\n      return 'badge-success';\n    } else {\n      return 'badge-danger';\n    }\n  }\n\n  refresh(): void {\n    this.healthService.checkHealth().subscribe(\n      health => (this.health = health),\n      (error: HttpErrorResponse) => {\n        if (error.status === 503) {\n          this.health = error.error;\n        }\n      }\n    );\n  }\n\n  showHealth(health: { key: string; value: HealthDetails }): void {\n    const modalRef = this.modalService.open(HealthModalComponent);\n    modalRef.componentInstance.health = health;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6595f2ec57741ab7c9eefbdaf47eb2a139ced4dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kzqzs6k4k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_kzqzs6k4k();
cov_kzqzs6k4k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_kzqzs6k4k().s[1]++;
exports.HealthComponent = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_kzqzs6k4k().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_kzqzs6k4k().s[3]++, require("@angular/core"));
const ng_bootstrap_1 =
/* istanbul ignore next */
(cov_kzqzs6k4k().s[4]++, require("@ng-bootstrap/ng-bootstrap"));
const health_service_1 =
/* istanbul ignore next */
(cov_kzqzs6k4k().s[5]++, require("./health.service"));
const health_modal_component_1 =
/* istanbul ignore next */
(cov_kzqzs6k4k().s[6]++, require("./modal/health-modal.component"));

/* istanbul ignore next */
cov_kzqzs6k4k().s[7]++;
let HealthComponent = class HealthComponent {
  constructor(modalService, healthService) {
    /* istanbul ignore next */
    cov_kzqzs6k4k().f[0]++;
    cov_kzqzs6k4k().s[8]++;
    this.modalService = modalService;

    /* istanbul ignore next */
    cov_kzqzs6k4k().s[9]++;
    this.healthService = healthService;
  }

  ngOnInit() {
    /* istanbul ignore next */
    cov_kzqzs6k4k().f[1]++;
    cov_kzqzs6k4k().s[10]++;
    this.refresh();
  }

  getBadgeClass(statusState) {
    /* istanbul ignore next */
    cov_kzqzs6k4k().f[2]++;
    cov_kzqzs6k4k().s[11]++;

    if (statusState === 'UP') {
      /* istanbul ignore next */
      cov_kzqzs6k4k().b[0][0]++;
      cov_kzqzs6k4k().s[12]++;
      return 'badge-success';
    } else {
      /* istanbul ignore next */
      cov_kzqzs6k4k().b[0][1]++;
      cov_kzqzs6k4k().s[13]++;
      return 'badge-danger';
    }
  }

  refresh() {
    /* istanbul ignore next */
    cov_kzqzs6k4k().f[3]++;
    cov_kzqzs6k4k().s[14]++;
    this.healthService.checkHealth().subscribe(health => {
      /* istanbul ignore next */
      cov_kzqzs6k4k().f[4]++;
      cov_kzqzs6k4k().s[15]++;
      return this.health = health;
    }, error => {
      /* istanbul ignore next */
      cov_kzqzs6k4k().f[5]++;
      cov_kzqzs6k4k().s[16]++;

      if (error.status === 503) {
        /* istanbul ignore next */
        cov_kzqzs6k4k().b[1][0]++;
        cov_kzqzs6k4k().s[17]++;
        this.health = error.error;
      } else
      /* istanbul ignore next */
      {
        cov_kzqzs6k4k().b[1][1]++;
      }
    });
  }

  showHealth(health) {
    /* istanbul ignore next */
    cov_kzqzs6k4k().f[6]++;
    const modalRef =
    /* istanbul ignore next */
    (cov_kzqzs6k4k().s[18]++, this.modalService.open(health_modal_component_1.HealthModalComponent));

    /* istanbul ignore next */
    cov_kzqzs6k4k().s[19]++;
    modalRef.componentInstance.health = health;
  }

};

/* istanbul ignore next */
cov_kzqzs6k4k().s[20]++;
HealthComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-health',
  template: require('./health.component.html')
}), tslib_1.__metadata("design:paramtypes", [ng_bootstrap_1.NgbModal, health_service_1.HealthService])], HealthComponent);

/* istanbul ignore next */
cov_kzqzs6k4k().s[21]++;
exports.HealthComponent = HealthComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2thcnRoaWsvY3luYXBzZVRlY2gvc3JjL21haW4vd2ViYXBwL2FwcC9hZG1pbi9oZWFsdGgvaGVhbHRoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW5CSCxNQUFBLE1BQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsQ0FBQTtBQUVBLE1BQUEsY0FBQTtBQUFBO0FBQUEseUJBQUEsT0FBQSxDQUFBLDRCQUFBLENBQUEsQ0FBQTtBQUVBLE1BQUEsZ0JBQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSxrQkFBQSxDQUFBLENBQUE7QUFFQSxNQUFBLHdCQUFBO0FBQUE7QUFBQSx5QkFBQSxPQUFBLENBQUEsZ0NBQUEsQ0FBQSxDQUFBOzs7O0FBTUEsSUFBYSxlQUFlLEdBQTVCLE1BQWEsZUFBYixDQUE0QjtBQUcxQixFQUFBLFdBQUEsQ0FBb0IsWUFBcEIsRUFBb0QsYUFBcEQsRUFBZ0Y7QUFBQTtBQUFBO0FBQUE7QUFBNUQsU0FBQSxZQUFBLEdBQUEsWUFBQTs7QUFBNEQ7QUFBQTtBQUE1QixTQUFBLGFBQUEsR0FBQSxhQUFBO0FBQWdDOztBQUVwRixFQUFBLFFBQVEsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNOLFNBQUssT0FBTDtBQUNEOztBQUVELEVBQUEsYUFBYSxDQUFDLFdBQUQsRUFBMEI7QUFBQTtBQUFBO0FBQUE7O0FBQ3JDLFFBQUksV0FBVyxLQUFLLElBQXBCLEVBQTBCO0FBQUE7QUFBQTtBQUFBO0FBQ3hCLGFBQU8sZUFBUDtBQUNELEtBRkQsTUFFTztBQUFBO0FBQUE7QUFBQTtBQUNMLGFBQU8sY0FBUDtBQUNEO0FBQ0Y7O0FBRUQsRUFBQSxPQUFPLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTCxTQUFLLGFBQUwsQ0FBbUIsV0FBbkIsR0FBaUMsU0FBakMsQ0FDRSxNQUFNLElBQUs7QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFBSyxNQUFMLEdBQWMsTUFBZDtBQUFvQixLQURqQyxFQUVHLEtBQUQsSUFBNkI7QUFBQTtBQUFBO0FBQUE7O0FBQzNCLFVBQUksS0FBSyxDQUFDLE1BQU4sS0FBaUIsR0FBckIsRUFBMEI7QUFBQTtBQUFBO0FBQUE7QUFDeEIsYUFBSyxNQUFMLEdBQWMsS0FBSyxDQUFDLEtBQXBCO0FBQ0QsT0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0QsS0FOSDtBQVFEOztBQUVELEVBQUEsVUFBVSxDQUFDLE1BQUQsRUFBOEM7QUFBQTtBQUFBO0FBQ3RELFVBQU0sUUFBUTtBQUFBO0FBQUEsOEJBQUcsS0FBSyxZQUFMLENBQWtCLElBQWxCLENBQXVCLHdCQUFBLENBQUEsb0JBQXZCLENBQUgsQ0FBZDs7QUFEc0Q7QUFBQTtBQUV0RCxJQUFBLFFBQVEsQ0FBQyxpQkFBVCxDQUEyQixNQUEzQixHQUFvQyxNQUFwQztBQUNEOztBQS9CeUIsQ0FBNUI7Ozs7QUFBYSxlQUFlLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUozQixNQUFBLENBQUEsU0FBQSxDQUFVO0FBQ1QsRUFBQSxRQUFRLEVBQUUsWUFERDtBQUVULEVBQUEsUUFBQSxFQUFBLE9BQUEsQ0FBYSx5QkFBYjtBQUZTLENBQVYsQ0FJMkIsRSx5Q0FHUSxjQUFBLENBQUEsUSxFQUFpQyxnQkFBQSxDQUFBLGEsRUFIekMsQ0FBQSxFQUFmLGVBQWUsQ0FBZjs7OztBQUFBLE9BQUEsQ0FBQSxlQUFBLEdBQUEsZUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE5nYk1vZGFsIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuXG5pbXBvcnQgeyBIZWFsdGhTZXJ2aWNlIH0gZnJvbSAnLi9oZWFsdGguc2VydmljZSc7XG5pbXBvcnQgeyBIZWFsdGgsIEhlYWx0aERldGFpbHMsIEhlYWx0aFN0YXR1cyB9IGZyb20gJy4vaGVhbHRoLm1vZGVsJztcbmltcG9ydCB7IEhlYWx0aE1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC9oZWFsdGgtbW9kYWwuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnamhpLWhlYWx0aCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFsdGguY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBIZWFsdGhDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBoZWFsdGg/OiBIZWFsdGg7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtb2RhbFNlcnZpY2U6IE5nYk1vZGFsLCBwcml2YXRlIGhlYWx0aFNlcnZpY2U6IEhlYWx0aFNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxuICBnZXRCYWRnZUNsYXNzKHN0YXR1c1N0YXRlOiBIZWFsdGhTdGF0dXMpOiBzdHJpbmcge1xuICAgIGlmIChzdGF0dXNTdGF0ZSA9PT0gJ1VQJykge1xuICAgICAgcmV0dXJuICdiYWRnZS1zdWNjZXNzJztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICdiYWRnZS1kYW5nZXInO1xuICAgIH1cbiAgfVxuXG4gIHJlZnJlc2goKTogdm9pZCB7XG4gICAgdGhpcy5oZWFsdGhTZXJ2aWNlLmNoZWNrSGVhbHRoKCkuc3Vic2NyaWJlKFxuICAgICAgaGVhbHRoID0+ICh0aGlzLmhlYWx0aCA9IGhlYWx0aCksXG4gICAgICAoZXJyb3I6IEh0dHBFcnJvclJlc3BvbnNlKSA9PiB7XG4gICAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDUwMykge1xuICAgICAgICAgIHRoaXMuaGVhbHRoID0gZXJyb3IuZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgc2hvd0hlYWx0aChoZWFsdGg6IHsga2V5OiBzdHJpbmc7IHZhbHVlOiBIZWFsdGhEZXRhaWxzIH0pOiB2b2lkIHtcbiAgICBjb25zdCBtb2RhbFJlZiA9IHRoaXMubW9kYWxTZXJ2aWNlLm9wZW4oSGVhbHRoTW9kYWxDb21wb25lbnQpO1xuICAgIG1vZGFsUmVmLmNvbXBvbmVudEluc3RhbmNlLmhlYWx0aCA9IGhlYWx0aDtcbiAgfVxufVxuIl19