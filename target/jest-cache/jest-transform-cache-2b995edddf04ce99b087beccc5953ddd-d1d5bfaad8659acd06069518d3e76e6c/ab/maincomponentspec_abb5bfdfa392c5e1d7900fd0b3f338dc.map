{"file":"/home/karthik/cynapseTech/src/main/webapp/app/layouts/main/main.component.spec.ts","mappings":"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","names":[],"sources":["/home/karthik/cynapseTech/src/main/webapp/app/layouts/main/main.component.spec.ts"],"sourcesContent":["jest.mock('app/core/auth/account.service');\n\nimport { waitForAsync, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { Subject, of } from 'rxjs';\nimport { TranslateModule, TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { AccountService } from 'app/core/auth/account.service';\n\nimport { MainComponent } from './main.component';\n\ndescribe('Component Tests', () => {\n  describe('MainComponent', () => {\n    let comp: MainComponent;\n    let fixture: ComponentFixture<MainComponent>;\n    let titleService: Title;\n    let translateService: TranslateService;\n    let mockAccountService: AccountService;\n    const routerEventsSubject = new Subject<RouterEvent>();\n    const routerState: any = { snapshot: { root: { data: {} } } };\n    class MockRouter {\n      events = routerEventsSubject;\n      routerState = routerState;\n    }\n\n    beforeEach(\n      waitForAsync(() => {\n        TestBed.configureTestingModule({\n          imports: [TranslateModule.forRoot()],\n          declarations: [MainComponent],\n          providers: [\n            Title,\n            AccountService,\n            {\n              provide: Router,\n              useClass: MockRouter,\n            },\n          ],\n        })\n          .overrideTemplate(MainComponent, '')\n          .compileComponents();\n      })\n    );\n\n    beforeEach(() => {\n      fixture = TestBed.createComponent(MainComponent);\n      comp = fixture.componentInstance;\n      titleService = TestBed.inject(Title);\n      translateService = TestBed.inject(TranslateService);\n      mockAccountService = TestBed.inject(AccountService);\n      mockAccountService.identity = jest.fn(() => of(null));\n      mockAccountService.getAuthenticationState = jest.fn(() => of(null));\n    });\n\n    describe('page title', () => {\n      const defaultPageTitle = 'global.title';\n      const parentRoutePageTitle = 'parentTitle';\n      const childRoutePageTitle = 'childTitle';\n      const navigationEnd = new NavigationEnd(1, '', '');\n      const langChangeEvent: LangChangeEvent = { lang: 'en', translations: null };\n\n      beforeEach(() => {\n        routerState.snapshot.root = { data: {} };\n        spyOn(translateService, 'get').and.callFake((key: string) => of(key + ' translated'));\n        translateService.currentLang = 'en';\n        spyOn(titleService, 'setTitle');\n        comp.ngOnInit();\n      });\n\n      describe('navigation end', () => {\n        it('should set page title to default title if pageTitle is missing on routes', () => {\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(defaultPageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle + ' translated');\n        });\n\n        it('should set page title to root route pageTitle if there is no child routes', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(childRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: {} };\n\n          // WHEN\n          routerEventsSubject.next(navigationEnd);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n      });\n\n      describe('language change', () => {\n        it('should set page title to default title if pageTitle is missing on routes', () => {\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(defaultPageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(defaultPageTitle + ' translated');\n        });\n\n        it('should set page title to root route pageTitle if there is no child routes', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to child route pageTitle if child routes exist and pageTitle is set for child route', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: { pageTitle: childRoutePageTitle } };\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(childRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(childRoutePageTitle + ' translated');\n        });\n\n        it('should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data', () => {\n          // GIVEN\n          routerState.snapshot.root.data = { pageTitle: parentRoutePageTitle };\n          routerState.snapshot.root.firstChild = { data: {} };\n\n          // WHEN\n          translateService.onLangChange.emit(langChangeEvent);\n\n          // THEN\n          expect(translateService.get).toHaveBeenCalledWith(parentRoutePageTitle);\n          expect(titleService.setTitle).toHaveBeenCalledWith(parentRoutePageTitle + ' translated');\n        });\n      });\n    });\n  });\n});\n"],"version":3}