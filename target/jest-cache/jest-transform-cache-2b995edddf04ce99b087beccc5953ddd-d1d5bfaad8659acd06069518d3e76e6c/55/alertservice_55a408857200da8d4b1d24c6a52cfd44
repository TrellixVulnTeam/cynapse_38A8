ec732ded11158765f1735b3bdf7c4182
"use strict";

/* istanbul ignore next */
function cov_2eg9jm0aoa() {
  var path = "/home/karthik/cynapseTech/src/main/webapp/app/core/util/alert.service.ts";
  var hash = "af941d932c8c8b0d029e18afad535cc709576303";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/karthik/cynapseTech/src/main/webapp/app/core/util/alert.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "6": {
        start: {
          line: 8,
          column: 29
        },
        end: {
          line: 8,
          column: 69
        }
      },
      "7": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 25
        }
      },
      "16": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 25
        }
      },
      "17": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "19": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "20": {
        start: {
          line: 39,
          column: 38
        },
        end: {
          line: 39,
          column: 114
        }
      },
      "21": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "22": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 50
        }
      },
      "23": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 178
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 91
        }
      },
      "27": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 85
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 94
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 78
        }
      },
      "30": {
        start: {
          line: 52,
          column: 39
        },
        end: {
          line: 52,
          column: 77
        }
      },
      "31": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 91
        }
      },
      "32": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "33": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "34": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "35": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 61,
          column: 23
        }
      },
      "36": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 120
        }
      },
      "37": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 21
        }
      },
      "38": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 91
        }
      },
      "39": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 69,
          column: 73
        }
      },
      "40": {
        start: {
          line: 69,
          column: 47
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "41": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "42": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "43": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 81,
          column: 17
        }
      },
      "44": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 82,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 53
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 10
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 23
          }
        },
        loc: {
          start: {
            line: 52,
            column: 39
          },
          end: {
            line: 52,
            column: 77
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 57,
            column: 43
          }
        },
        loc: {
          start: {
            line: 57,
            column: 48
          },
          end: {
            line: 63,
            column: 13
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 28
          }
        },
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 62,
            column: 17
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 59,
            column: 37
          }
        },
        loc: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 61,
            column: 21
          }
        },
        line: 59
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 67
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 69,
            column: 38
          },
          end: {
            line: 69,
            column: 39
          }
        },
        loc: {
          start: {
            line: 69,
            column: 47
          },
          end: {
            line: 69,
            column: 55
          }
        },
        line: 69
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 177
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 170
          },
          end: {
            line: 48,
            column: 172
          }
        }, {
          start: {
            line: 48,
            column: 175
          },
          end: {
            line: 48,
            column: 177
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 167
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 150
          }
        }, {
          start: {
            line: 48,
            column: 154
          },
          end: {
            line: 48,
            column: 167
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 83
          },
          end: {
            line: 48,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 132
          },
          end: {
            line: 48,
            column: 134
          }
        }, {
          start: {
            line: 48,
            column: 137
          },
          end: {
            line: 48,
            column: 139
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 83
          },
          end: {
            line: 48,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 83
          },
          end: {
            line: 48,
            column: 112
          }
        }, {
          start: {
            line: 48,
            column: 116
          },
          end: {
            line: 48,
            column: 129
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 73
          },
          end: {
            line: 49,
            column: 75
          }
        }, {
          start: {
            line: 49,
            column: 78
          },
          end: {
            line: 49,
            column: 90
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 70
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 69
          },
          end: {
            line: 50,
            column: 71
          }
        }, {
          start: {
            line: 50,
            column: 74
          },
          end: {
            line: 50,
            column: 84
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 49
          }
        }, {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 66
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 75
          },
          end: {
            line: 51,
            column: 77
          }
        }, {
          start: {
            line: 51,
            column: 80
          },
          end: {
            line: 51,
            column: 93
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 55
          }
        }, {
          start: {
            line: 51,
            column: 59
          },
          end: {
            line: 51,
            column: 72
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 54
          },
          end: {
            line: 53,
            column: 63
          }
        }, {
          start: {
            line: 53,
            column: 66
          },
          end: {
            line: 53,
            column: 77
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 27
          }
        }, {
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 51
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 60,
            column: 50
          },
          end: {
            line: 60,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 95
          },
          end: {
            line: 60,
            column: 104
          }
        }, {
          start: {
            line: 60,
            column: 107
          },
          end: {
            line: 60,
            column: 118
          }
        }],
        line: 60
      },
      "17": {
        loc: {
          start: {
            line: 60,
            column: 50
          },
          end: {
            line: 60,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 50
          },
          end: {
            line: 60,
            column: 68
          }
        }, {
          start: {
            line: 60,
            column: 72
          },
          end: {
            line: 60,
            column: 92
          }
        }],
        line: 60
      },
      "18": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 68
          },
          end: {
            line: 68,
            column: 77
          }
        }, {
          start: {
            line: 68,
            column: 80
          },
          end: {
            line: 68,
            column: 91
          }
        }],
        line: 68
      },
      "19": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 41
          }
        }, {
          start: {
            line: 68,
            column: 45
          },
          end: {
            line: 68,
            column: 65
          }
        }],
        line: 68
      },
      "20": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      file: "/home/karthik/cynapseTech/src/main/webapp/app/core/util/alert.service.ts",
      mappings: ";;;;AAAA,wCAAoE;AACpE,gEAAyD;AACzD,8CAAuD;AACvD,sEAA2E;AAmB3E,IAAa,YAAY,GAAzB,MAAa,YAAY;IASvB,YAAoB,SAAuB,EAAU,MAAc,EAAU,gBAAkC;QAA3F,cAAS,GAAT,SAAS,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAR/G,YAAO,GAAG,IAAI,CAAC;QACf,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAG,WAAW,CAAC;QAEvB,2CAA2C;QACnC,YAAO,GAAG,CAAC,CAAC;QACZ,WAAM,GAAY,EAAE,CAAC;IAEqF,CAAC;IAEnH,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;;;;;OAOG;IACH,QAAQ,CAAC,KAAY,EAAE,SAAmB;;QACxC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAE1B,IAAI,KAAK,CAAC,cAAc,EAAE;YACxB,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACvG,4BAA4B;YAC5B,IAAI,iBAAiB,KAAK,GAAG,+CAA0B,IAAI,KAAK,CAAC,cAAc,GAAG,EAAE;gBAClF,KAAK,CAAC,OAAO,GAAG,iBAAiB,CAAC;aACnC;iBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACzB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,cAAc,CAAC;aACtC;SACF;QAED,KAAK,CAAC,OAAO,SAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAe,CAAC,IAAI,QAAE,KAAK,CAAC,OAAO,mCAAI,EAAE,CAAC,mCAAI,EAAE,CAAC;QACzF,KAAK,CAAC,OAAO,SAAG,KAAK,CAAC,OAAO,mCAAI,IAAI,CAAC,OAAO,CAAC;QAC9C,KAAK,CAAC,KAAK,SAAG,KAAK,CAAC,KAAK,mCAAI,IAAI,CAAC,KAAK,CAAC;QACxC,KAAK,CAAC,QAAQ,SAAG,KAAK,CAAC,QAAQ,mCAAI,IAAI,CAAC,QAAQ,CAAC;QACjD,KAAK,CAAC,KAAK,GAAG,CAAC,WAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAG,EAAE,WAAW,CAAC,CAAC;QAEhF,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,KAAK,CAAC,OAAO,GAAG,CAAC,EAAE;YACrB,gDAAgD;YAChD,sDAAsD;YACtD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE;gBACjC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;wBACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAG,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvD,CAAC,CAAC,CAAC;gBACL,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,UAAU,CAAC,OAAe,EAAE,SAAmB;QACrD,MAAM,MAAM,GAAG,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC;QACxC,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAClE,6BAA6B;QAC7B,IAAI,UAAU,IAAI,CAAC,EAAE;YACnB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC9B;IACH,CAAC;CACF,CAAA;AAvEY,YAAY;IAHxB,iBAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;6CAU+B,+BAAY,EAAkB,aAAM,EAA4B,uBAAgB;GATpG,YAAY,CAuExB;AAvEY,oCAAY",
      names: [],
      sources: ["/home/karthik/cynapseTech/src/main/webapp/app/core/util/alert.service.ts"],
      sourcesContent: ["import { Injectable, SecurityContext, NgZone } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { translationNotFoundMessage } from 'app/config/translation.config';\n\nexport type AlertType = 'success' | 'danger' | 'warning' | 'info';\n\nexport interface Alert {\n  id?: number;\n  type: AlertType;\n  message?: string;\n  translationKey?: string;\n  translationParams?: { [key: string]: unknown };\n  timeout?: number;\n  toast?: boolean;\n  position?: string;\n  close?: (alerts: Alert[]) => void;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  timeout = 5000;\n  toast = false;\n  position = 'top right';\n\n  // unique id for each alert. Starts from 0.\n  private alertId = 0;\n  private alerts: Alert[] = [];\n\n  constructor(private sanitizer: DomSanitizer, private ngZone: NgZone, private translateService: TranslateService) {}\n\n  clear(): void {\n    this.alerts = [];\n  }\n\n  get(): Alert[] {\n    return this.alerts;\n  }\n\n  /**\n   * Adds alert to alerts array and returns added alert.\n   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.\n   *                   If `translateKey` is available then it's translation else `message` is used for showing.\n   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.\n   *                   Else adding `alert` to `extAlerts`.\n   * @returns  Added alert\n   */\n  addAlert(alert: Alert, extAlerts?: Alert[]): Alert {\n    alert.id = this.alertId++;\n\n    if (alert.translationKey) {\n      const translatedMessage = this.translateService.instant(alert.translationKey, alert.translationParams);\n      // if translation key exists\n      if (translatedMessage !== `${translationNotFoundMessage}[${alert.translationKey}]`) {\n        alert.message = translatedMessage;\n      } else if (!alert.message) {\n        alert.message = alert.translationKey;\n      }\n    }\n\n    alert.message = this.sanitizer.sanitize(SecurityContext.HTML, alert.message ?? '') ?? '';\n    alert.timeout = alert.timeout ?? this.timeout;\n    alert.toast = alert.toast ?? this.toast;\n    alert.position = alert.position ?? this.position;\n    alert.close = (alertsArray: Alert[]) => this.closeAlert(alert.id!, alertsArray);\n\n    (extAlerts ?? this.alerts).push(alert);\n\n    if (alert.timeout > 0) {\n      // Workaround protractor waiting for setTimeout.\n      // Reference https://www.protractortest.org/#/timeouts\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.ngZone.run(() => {\n            this.closeAlert(alert.id!, extAlerts ?? this.alerts);\n          });\n        }, alert.timeout);\n      });\n    }\n\n    return alert;\n  }\n\n  private closeAlert(alertId: number, extAlerts?: Alert[]): void {\n    const alerts = extAlerts ?? this.alerts;\n    const alertIndex = alerts.map(alert => alert.id).indexOf(alertId);\n    // if found alert then remove\n    if (alertIndex >= 0) {\n      alerts.splice(alertIndex, 1);\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "af941d932c8c8b0d029e18afad535cc709576303"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2eg9jm0aoa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2eg9jm0aoa();
cov_2eg9jm0aoa().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2eg9jm0aoa().s[1]++;
exports.AlertService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2eg9jm0aoa().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_2eg9jm0aoa().s[3]++, require("@angular/core"));
const platform_browser_1 =
/* istanbul ignore next */
(cov_2eg9jm0aoa().s[4]++, require("@angular/platform-browser"));
const core_2 =
/* istanbul ignore next */
(cov_2eg9jm0aoa().s[5]++, require("@ngx-translate/core"));
const translation_config_1 =
/* istanbul ignore next */
(cov_2eg9jm0aoa().s[6]++, require("app/config/translation.config"));

/* istanbul ignore next */
cov_2eg9jm0aoa().s[7]++;
let AlertService = class AlertService {
  constructor(sanitizer, ngZone, translateService) {
    /* istanbul ignore next */
    cov_2eg9jm0aoa().f[0]++;
    cov_2eg9jm0aoa().s[8]++;
    this.sanitizer = sanitizer;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[9]++;
    this.ngZone = ngZone;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[10]++;
    this.translateService = translateService;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[11]++;
    this.timeout = 5000;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[12]++;
    this.toast = false;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[13]++;
    this.position = 'top right'; // unique id for each alert. Starts from 0.

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[14]++;
    this.alertId = 0;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[15]++;
    this.alerts = [];
  }

  clear() {
    /* istanbul ignore next */
    cov_2eg9jm0aoa().f[1]++;
    cov_2eg9jm0aoa().s[16]++;
    this.alerts = [];
  }

  get() {
    /* istanbul ignore next */
    cov_2eg9jm0aoa().f[2]++;
    cov_2eg9jm0aoa().s[17]++;
    return this.alerts;
  }
  /**
   * Adds alert to alerts array and returns added alert.
   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.
   *                   If `translateKey` is available then it's translation else `message` is used for showing.
   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.
   *                   Else adding `alert` to `extAlerts`.
   * @returns  Added alert
   */


  addAlert(alert, extAlerts) {
    /* istanbul ignore next */
    cov_2eg9jm0aoa().f[3]++;

    var _a, _b, _c, _d, _e;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[18]++;
    alert.id = this.alertId++;

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[19]++;

    if (alert.translationKey) {
      /* istanbul ignore next */
      cov_2eg9jm0aoa().b[0][0]++;
      const translatedMessage =
      /* istanbul ignore next */
      (cov_2eg9jm0aoa().s[20]++, this.translateService.instant(alert.translationKey, alert.translationParams)); // if translation key exists

      /* istanbul ignore next */
      cov_2eg9jm0aoa().s[21]++;

      if (translatedMessage !== `${translation_config_1.translationNotFoundMessage}[${alert.translationKey}]`) {
        /* istanbul ignore next */
        cov_2eg9jm0aoa().b[1][0]++;
        cov_2eg9jm0aoa().s[22]++;
        alert.message = translatedMessage;
      } else {
        /* istanbul ignore next */
        cov_2eg9jm0aoa().b[1][1]++;
        cov_2eg9jm0aoa().s[23]++;

        if (!alert.message) {
          /* istanbul ignore next */
          cov_2eg9jm0aoa().b[2][0]++;
          cov_2eg9jm0aoa().s[24]++;
          alert.message = alert.translationKey;
        } else
        /* istanbul ignore next */
        {
          cov_2eg9jm0aoa().b[2][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2eg9jm0aoa().b[0][1]++;
    }

    cov_2eg9jm0aoa().s[25]++;
    alert.message =
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[4][0]++, (_b = this.sanitizer.sanitize(core_1.SecurityContext.HTML,
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[6][0]++, (_a = alert.message) !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[6][1]++, _a !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[5][0]++, _a) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[5][1]++, ''))) !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[4][1]++, _b !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[3][0]++, _b) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[3][1]++, '');

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[26]++;
    alert.timeout =
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[8][0]++, (_c = alert.timeout) !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[8][1]++, _c !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[7][0]++, _c) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[7][1]++, this.timeout);

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[27]++;
    alert.toast =
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[10][0]++, (_d = alert.toast) !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[10][1]++, _d !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[9][0]++, _d) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[9][1]++, this.toast);

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[28]++;
    alert.position =
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[12][0]++, (_e = alert.position) !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[12][1]++, _e !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[11][0]++, _e) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[11][1]++, this.position);

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[29]++;

    alert.close = alertsArray => {
      /* istanbul ignore next */
      cov_2eg9jm0aoa().f[4]++;
      cov_2eg9jm0aoa().s[30]++;
      return this.closeAlert(alert.id, alertsArray);
    };

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[31]++;
    (
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[14][0]++, extAlerts !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[14][1]++, extAlerts !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[13][0]++, extAlerts) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[13][1]++, this.alerts)).push(alert);

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[32]++;

    if (alert.timeout > 0) {
      /* istanbul ignore next */
      cov_2eg9jm0aoa().b[15][0]++;
      cov_2eg9jm0aoa().s[33]++;
      // Workaround protractor waiting for setTimeout.
      // Reference https://www.protractortest.org/#/timeouts
      this.ngZone.runOutsideAngular(() => {
        /* istanbul ignore next */
        cov_2eg9jm0aoa().f[5]++;
        cov_2eg9jm0aoa().s[34]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2eg9jm0aoa().f[6]++;
          cov_2eg9jm0aoa().s[35]++;
          this.ngZone.run(() => {
            /* istanbul ignore next */
            cov_2eg9jm0aoa().f[7]++;
            cov_2eg9jm0aoa().s[36]++;
            this.closeAlert(alert.id,
            /* istanbul ignore next */
            (cov_2eg9jm0aoa().b[17][0]++, extAlerts !== null) &&
            /* istanbul ignore next */
            (cov_2eg9jm0aoa().b[17][1]++, extAlerts !== void 0) ?
            /* istanbul ignore next */
            (cov_2eg9jm0aoa().b[16][0]++, extAlerts) :
            /* istanbul ignore next */
            (cov_2eg9jm0aoa().b[16][1]++, this.alerts));
          });
        }, alert.timeout);
      });
    } else
    /* istanbul ignore next */
    {
      cov_2eg9jm0aoa().b[15][1]++;
    }

    cov_2eg9jm0aoa().s[37]++;
    return alert;
  }

  closeAlert(alertId, extAlerts) {
    /* istanbul ignore next */
    cov_2eg9jm0aoa().f[8]++;
    const alerts =
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().s[38]++,
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[19][0]++, extAlerts !== null) &&
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[19][1]++, extAlerts !== void 0) ?
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[18][0]++, extAlerts) :
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().b[18][1]++, this.alerts));
    const alertIndex =
    /* istanbul ignore next */
    (cov_2eg9jm0aoa().s[39]++, alerts.map(alert => {
      /* istanbul ignore next */
      cov_2eg9jm0aoa().f[9]++;
      cov_2eg9jm0aoa().s[40]++;
      return alert.id;
    }).indexOf(alertId)); // if found alert then remove

    /* istanbul ignore next */
    cov_2eg9jm0aoa().s[41]++;

    if (alertIndex >= 0) {
      /* istanbul ignore next */
      cov_2eg9jm0aoa().b[20][0]++;
      cov_2eg9jm0aoa().s[42]++;
      alerts.splice(alertIndex, 1);
    } else
    /* istanbul ignore next */
    {
      cov_2eg9jm0aoa().b[20][1]++;
    }
  }

};

/* istanbul ignore next */
cov_2eg9jm0aoa().s[43]++;
AlertService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [platform_browser_1.DomSanitizer, core_1.NgZone, core_2.TranslateService])], AlertService);

/* istanbul ignore next */
cov_2eg9jm0aoa().s[44]++;
exports.AlertService = AlertService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,