{"file":"/home/karthik/cynapseTech/src/main/webapp/app/entities/forms/route/forms-routing-resolve.service.spec.ts","mappings":"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","names":[],"sources":["/home/karthik/cynapseTech/src/main/webapp/app/entities/forms/route/forms-routing-resolve.service.spec.ts"],"sourcesContent":["jest.mock('@angular/router');\n\nimport { TestBed } from '@angular/core/testing';\nimport { HttpResponse } from '@angular/common/http';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { of } from 'rxjs';\n\nimport { IForms, Forms } from '../forms.model';\nimport { FormsService } from '../service/forms.service';\n\nimport { FormsRoutingResolveService } from './forms-routing-resolve.service';\n\ndescribe('Service Tests', () => {\n  describe('Forms routing resolve service', () => {\n    let mockRouter: Router;\n    let mockActivatedRouteSnapshot: ActivatedRouteSnapshot;\n    let routingResolveService: FormsRoutingResolveService;\n    let service: FormsService;\n    let resultForms: IForms | undefined;\n\n    beforeEach(() => {\n      TestBed.configureTestingModule({\n        imports: [HttpClientTestingModule],\n        providers: [Router, ActivatedRouteSnapshot],\n      });\n      mockRouter = TestBed.inject(Router);\n      mockActivatedRouteSnapshot = TestBed.inject(ActivatedRouteSnapshot);\n      routingResolveService = TestBed.inject(FormsRoutingResolveService);\n      service = TestBed.inject(FormsService);\n      resultForms = undefined;\n    });\n\n    describe('resolve', () => {\n      it('should return IForms returned by find', () => {\n        // GIVEN\n        service.find = jest.fn(id => of(new HttpResponse({ body: { id } })));\n        mockActivatedRouteSnapshot.params = { id: 123 };\n\n        // WHEN\n        routingResolveService.resolve(mockActivatedRouteSnapshot).subscribe(result => {\n          resultForms = result;\n        });\n\n        // THEN\n        expect(service.find).toBeCalledWith(123);\n        expect(resultForms).toEqual({ id: 123 });\n      });\n\n      it('should return new IForms if id is not provided', () => {\n        // GIVEN\n        service.find = jest.fn();\n        mockActivatedRouteSnapshot.params = {};\n\n        // WHEN\n        routingResolveService.resolve(mockActivatedRouteSnapshot).subscribe(result => {\n          resultForms = result;\n        });\n\n        // THEN\n        expect(service.find).not.toBeCalled();\n        expect(resultForms).toEqual(new Forms());\n      });\n\n      it('should route to 404 page if data not found in server', () => {\n        // GIVEN\n        spyOn(service, 'find').and.returnValue(of(new HttpResponse({ body: null })));\n        mockActivatedRouteSnapshot.params = { id: 123 };\n\n        // WHEN\n        routingResolveService.resolve(mockActivatedRouteSnapshot).subscribe(result => {\n          resultForms = result;\n        });\n\n        // THEN\n        expect(service.find).toBeCalledWith(123);\n        expect(resultForms).toEqual(undefined);\n        expect(mockRouter.navigate).toHaveBeenCalledWith(['404']);\n      });\n    });\n  });\n});\n"],"version":3}